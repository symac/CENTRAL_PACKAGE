{"version":3,"sources":["node_modules/browser-pack/_prelude.js","primo-explore/custom/CENTRAL_PACKAGE/js/main.js","primo-explore/custom/CENTRAL_PACKAGE/js/prmBriefResultContainerAfter/pnxXml.js","primo-explore/custom/CENTRAL_PACKAGE/js/prmFacetExactAfter/customTLevelFacette.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_pnxXml","_customTLevelFacette","app","angular","component","pnxXmlConfig","tLevelFacetteConfig","PnxXmlController","_classCallCheck","this","console","log","parentCtrl","item","pnx","control","recordid","bindings","controller","template","tLevelFacetteController","facetGroup","name","tlevelFacetsValues","values","facetName","value","includes","splice"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gBCCA,IAAAK,EAAAX,EAAA,yCACAY,EAAAZ,EAAA,4CAEIa,EAAMC,QAAQJ,OAAO,aAAa,IAClCG,IACAA,EAAIE,UAAU,+BAAgCJ,EAAAK,cAC9CH,EAAIE,UAAU,qBAAsBH,EAAAK,+bCLlCC,aACJ,SAAAA,iGAAaC,CAAAC,KAAAF,GACXG,QAAQC,IAAI,+DAIZ,OAAOF,KAAKG,WAAWC,KAAKC,IAAIC,QAAQC,SAAS,YAI1CrB,EAAAU,aAAe,CACxBY,SAAU,CAACL,WAAW,KACtBM,WAAYX,EACZY,0xBCZIC,aACJ,SAAAA,IAIE,+FAJWZ,CAAAC,KAAAW,GACXV,QAAQC,IAAI,2CAGK,UAFDF,KAAKG,WAAWS,WAAWC,KAEjB,CAEtB,IAAIC,EAAqBd,KAAKG,WAAWS,WAAWG,OACpDd,QAAQC,IAAIY,GAEZ,IAAK,IAAIrC,EAAI,EAAGA,EAAIqC,EAAmB1B,OAAQX,IAAK,CAEhD,IAAIuC,EAAYF,EAAmBrC,GAAGwC,MACtChB,QAAQC,IAAIc,GAER,CAAC,gBAAiB,cAAe,aAAaE,SAASF,KACvDF,EAAmBK,OAAO1C,EAAG,GAC7BA,GAAQ,EACRwB,QAAQC,IAAI,2DAOxB,OAAOF,KAAKG,WAAWC,KAAKC,IAAIC,QAAQC,SAAS,YAI1CrB,EAAAW,oBAAsB,CAC/BW,SAAU,CAACL,WAAW,KACtBM,WAAYE","file":"custom.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\nimport {pnxXmlConfig} from './prmBriefResultContainerAfter/pnxXml'\nimport {tLevelFacetteConfig} from './prmFacetExactAfter/customTLevelFacette'\n\nlet app = angular.module('viewCustom',[]);\nif (app){\n    app.component('prmBriefResultContainerAfter', pnxXmlConfig);\n    app.component('prmFacetExactAfter', tLevelFacetteConfig);\n}\n","import pnxXmlHTML from './pnxXml.html'\n\nclass PnxXmlController {\n  constructor(){\n    console.log('---->starting');\n  }\n\n  get recordid() {\n    return this.parentCtrl.item.pnx.control.recordid[0];\n  }\n}\n\nexport let pnxXmlConfig = {\n  bindings: {parentCtrl:'<'},\n  controller: PnxXmlController,\n  template: pnxXmlHTML\n}\n","\n/*[33PUDB_NETWORK_AFA] - Customisation de la toplevel facette  */\n/*Suprime les entrées 'peer_reviewed','open_access'et'available'*/\nclass tLevelFacetteController {\n  constructor(){\n    console.log('----> 33PUDB tLevelFacetteController');\n    var facetType = this.parentCtrl.facetGroup.name; \n    /*Filtre sur la top level facette*/\n    if (facetType == \"tlevel\"){\n        /*Récupère les valeurs de la tlevel facette*/\n        var tlevelFacetsValues = this.parentCtrl.facetGroup.values;\n        console.log(tlevelFacetsValues);\n        /*Parcours du tableau des valeurs*/\n        for (var i = 0; i < tlevelFacetsValues.length; i++) {\n            /*Récupère le nom de la facette*/\n            var facetName = tlevelFacetsValues[i].value;\n            console.log(facetName);\n            /*On supprime les entrées relatives à la tlevel*/\n            if (['peer_reviewed', 'open_access', 'available'].includes(facetName)) {\n                tlevelFacetsValues.splice(i, 1);\n                i = i - 1;\n                console.log(\"Supprimée\");\n            }\n        }\n    }\n  }\n\n  get recordid() {\n    return this.parentCtrl.item.pnx.control.recordid[0];\n  }\n}\n\nexport let tLevelFacetteConfig = {\n  bindings: {parentCtrl:'<'},\n  controller: tLevelFacetteController,\n}\n"],"sourceRoot":"/source/"}